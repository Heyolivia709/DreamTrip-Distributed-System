services:
  # 数据库服务
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: dream_trip
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dream_trip_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dream_trip_network

  # 消息队列
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - dream_trip_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - dream_trip_network

  # 微服务
  gateway:
    build: ./gateway
    ports:
      - "8000:8000"
    environment:
      - ROUTE_SERVICE_URL=http://route_service:8001
      - WEATHER_SERVICE_URL=http://weather_service:8002
      - POI_SERVICE_URL=http://poi_service:8003
      - AI_SERVICE_URL=http://ai_summary_service:8004
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/dream_trip
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:29092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - dream_trip_network

  route_service:
    build: ./route_service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/dream_trip
      - REDIS_URL=redis://redis:6379
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
    depends_on:
      - postgres
      - redis
    networks:
      - dream_trip_network

  weather_service:
    build: ./weather_service
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/dream_trip
      - REDIS_URL=redis://redis:6379
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    depends_on:
      - postgres
      - redis
    networks:
      - dream_trip_network

  poi_service:
    build: ./poi_service
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/dream_trip
      - REDIS_URL=redis://redis:6379
      - GOOGLE_PLACES_API_KEY=${GOOGLE_PLACES_API_KEY}
    depends_on:
      - postgres
      - redis
    networks:
      - dream_trip_network

  ai_summary_service:
    build: ./ai_summary_service
    ports:
      - "8004:8004"
    environment:
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/dream_trip
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - dream_trip_network

volumes:
  postgres_data:
  redis_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data:

networks:
  dream_trip_network:
    driver: bridge
